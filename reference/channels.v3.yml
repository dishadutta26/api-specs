openapi: 3.0.0
info:
  version: ''
  title: Channels
  description: |-
    Create and manage sales [channels](/api-docs/channels/overview), their [sites](/api-reference/store-management/channels/channel-site), and their [product listings](/api-reference/store-management/channels#channel-listings).

    ## Authentication

    Authenticate requests by including an [OAuth](/api-docs/getting-started/authentication/rest-api-authentication) `access_token` in the request header.

    ```http
    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/channels
    Content-Type: application/json
    X-Auth-Token: {{ACCESS_TOKEN}}
    ```

    ### [OAuth Scopes](/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes)

    | UI Name                                      | Permission | Parameter                                     |
    |----------------------------------------------|------------|-----------------------------------------------|
    | Channel Listings                             | modify     | `store_channel_listings`                      |
    | Channel Listings                             | read-only  | `store_channel_listings_read_only`            |
    | Channel Settings                             | modify     | `store_channel_settings`                      |
    | Channel Settings                             | read-only  | `store_channel_settings_read_only`            |

    ## Channels

    A [channel](/api-reference/cart-checkout/channels-listings-api/channels) is anywhere a merchant sells their products. This encompasses headless storefronts, marketplaces, POS systems, and marketing platforms.

    ### Platform

    A channel's `type` and `platform` combination must be a valid pair as indicated in the table below.

    | Platform          | Accepted Type             |
    |-------------------|---------------------------|
    | `square`          | `pos`                     |
    | `stripe`          | `pos`                     |
    | `vend`            | `pos`                     |
    | `clover`          | `pos`                     |
    | `talech`          | `pos`                     |
    | `facebook`        | `marketplace`,`marketing` |
    | `instagram`       | `marketplace`,`marketing` |
    | `amazon`          | `marketplace`             |
    | `ebay`            | `marketplace`             |
    | `pinterest`       | `marketplace`             |
    | `wayfair`         | `marketplace`             |
    | `overstock`       | `marketplace`             |
    | `etsy`            | `marketplace`             |
    | `wish`            | `marketplace`             |
    | `walmart`         | `marketplace`             |
    | `gatsby`          | `storefront`              |
    | `wordpress`       | `storefront`              |
    | `drupal`          | `storefront`              |
    | `acquia`          | `storefront`              |
    | `bloomreach`      | `storefront`              |
    | `deity`           | `storefront`              |
    | `next`            | `storefront`              |
    | `vue`             | `storefront`              |
    | `google_shopping` | `marketing`               |
    | `custom`          | `storefront`, `pos`, `marketing`, `marketplace` |

    ### Status

    Allowed values for a channel's `status` vary by channel `type` and `platform`.

    |Type|Platform|Allowed Statuses|
    |--|--|--|
    |`storefront`|`bigcommerce`|`prelaunch`, `active`, `inactive`, `archived`, `deleted`|
    |`storefront`|**Is not** `bigcommerce` |`active`, `inactive`, `archived`, `deleted`
    |`marketing`, `marketplace`, `pos`|N/A|`connected`, `disconnected`, `archived`, `deleted`|

    <!-- theme: warning -->
    > #### Note
    > * A Channel with `deleted` status can be restored within 90 days after deleting by contacting BigCommerce support team. Once the 90 days grace period is over, the Channel `status` will become `terminated`.
    > * The `terminated` status is read-only. `terminated` channels cannot be restored.
    > * As of April 2020, `status`  should be used in place of `is_enabled` -- `is_enabled` is deprecated.

    ## Channel listings

    [Channel listings](/api-reference/store-management/channels/channel-listings) allow you to manage catalog differences among different storefronts or marketplaces.

    ## Channel site

    A [Channel site](/api-reference/store-management/channels/channel-site) refers to the domain associated with a channel.

    ## Resources

    * [Sites and Routes API Reference](/api-reference/cart-checkout/sites-routes-api)
    * [Building Channels Overview](/api-docs/channels/overview)
    * [Building Channel Apps](/api-docs/channels/building-channel-apps)
    * [Channels Toolkit Reference](/api-docs/channels/channels-toolkit-reference)
tags:
  - name: Channels
  - name: Channel Active Theme
  - name: Channel Currency Assignments
  - name: Channel Listings
  - name: Channel Site
paths:
  '/stores/{store_hash}/v3/channels':
    get:
      tags:
        - Channels
      summary: Get All Channels
      operationId: listChannels
      description: |-
        Returns a list of *Channels*.

        Will always return the default BigCommerce storefront with an ID of `1`. This storefront is created by default when you provision a BigCommerce store.
      parameters:
        - $ref: '#/components/parameters/include'
        - $ref: '#/components/parameters/available'
        - $ref: '#/components/parameters/status_in'
        - $ref: '#/components/parameters/type_in'
        - $ref: '#/components/parameters/platform_in'
        - $ref: '#/components/parameters/date_created'
        - $ref: '#/components/parameters/date_created_min'
        - $ref: '#/components/parameters/date_created_max'
        - $ref: '#/components/parameters/date_modified'
        - $ref: '#/components/parameters/date_modified_min'
        - $ref: '#/components/parameters/date_modified_max'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_without_currencies_resp'
        '422':
          $ref: '#/components/responses/invalid_filter_value_resp'
    post:
      tags:
        - Channels
      summary: Create a Channel
      operationId: createChannel
      description: Creates a *Channel*.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelReq'
            examples:
              Create a Facebook Channel:
                $ref: '#/components/examples/create_channel_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_without_currencies_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_channel_data_resp'
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
  '/stores/{store_hash}/v3/channels/{channel_id}':
    parameters:
      - name: channel_id
        description: The ID of a channel
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
    get:
      tags:
        - Channels
      summary: Get a Channel
      operationId: getChannel
      description: Returns a *Channel*. Channel ID `1` returns the default BigCommerce storefront.
      parameters:
        - $ref: '#/components/parameters/include'
      responses:
        '200':
          $ref: '#/components/responses/single_channel_with_currencies_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
    put:
      tags:
        - Channels
      summary: Update a Channel
      operationId: updateChannel
      description: |-
        Updates a *Channel*.

        ## Updatable Fields

        The following fields can be updated.
        * `name`
        * `external_id`
        * `status`
        * `is_listable_from_ui`
        * `is_visible`
        * `is_enabled`
        * `config_meta`


        > #### Note
        > * Partial updates are supported. In most cases, if a field that *cannot* be updated is passed in, the API **will not** respond with an error. It returns a 200 response with the object, in which you will see the field(s) were not updated.
        > * `platform` and `type` cannot be updated after a channel is created.
        > * A channel with status `deleted` or `terminated` cannot be updated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelReq'
            examples:
              Update a Facebook Channel:
                $ref: '#/components/examples/update_channel_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_without_currencies_resp'
        '404':
          $ref: '#/components/responses/channel_entity_not_found_resp'
        '409':
          $ref: '#/components/responses/duplicate_channel_resp'
        '422':
          $ref: '#/components/responses/invalid_channel_update_field_resp'
  '/stores/{store_hash}/v3/channels/{channel_id}/active-theme':
    get:
      tags:
        - Channel Active Theme
      summary: Get a Channel Active Theme
      operationId: getChannelActiveTheme
      description: |-
        Returns details of the theme active on the specified channel.
        Does not support active Blueprint (legacy) themes.
      parameters:
        - $ref: '#/components/parameters/channel_id_path_param'
      responses:
        '200':
          $ref: '#/components/responses/channel_active_theme_resp'
        '404':
          $ref: '#/components/responses/active_theme_not_found_resp'
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
      - schema:
          type: string
        name: channel_id
        in: path
        required: true
  '/stores/{store_hash}/v3/channels/currency-assignments':
    get:
      tags:
        - Channel Currency Assignments
      summary: Get All Channels Currency Assignments
      operationId: listAllCurrencyAssignments
      description: Returns a list of currency assignments for all channels.
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
    post:
      tags:
        - Channel Currency Assignments
      summary: Create Multiple Channels Currency Assignments
      operationId: createMultipleChannelsCurrencyAssignments
      description: Sets enabled currencies and default currency for multiple channels. Note that currencies must be added first in the Store Setup > Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'
            examples:
              Create Currency Assignments for Multiple Channels:
                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'
    put:
      tags:
        - Channel Currency Assignments
      summary: Update Multiple Channels Currency Assignments
      operationId: updateMultipleChannelsCurrencyAssignments
      description: Updates enabled currencies and default currency for multiple channels. Note that currencies must be added first in the Store Setup > Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'
            examples:
              Update Currency Assignments for Multiple Channels:
                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
  '/stores/{store_hash}/v3/channels/{channel_id}/currency-assignments':
    parameters:
      - name: channel_id
        description: The ID of a channel
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
    get:
      tags:
        - Channel Currency Assignments
      summary: Get Channel Currency Assignments
      operationId: getSingleChannelCurrencyAssignments
      description: Returns a list of currency assignments for a specific channel.
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
    post:
      tags:
        - Channel Currency Assignments
      summary: Create Channel Currency Assignments
      operationId: createSingleChannelCurrencyAssignments
      description: Sets enabled currencies and default currency for a specific channel. Note that currencies must be added first in the Store Setup > Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'
            examples:
              Create Currency Assignments for a Channel:
                $ref: '#/components/examples/single_channel_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'
    put:
      tags:
        - Channel Currency Assignments
      summary: Update Channel Currency Assignments
      operationId: updateSingleChannelCurrencyAssignments
      description: Updates enabled currencies and default currency for a specific channel. Note that currencies must be added first in the Store Setup > Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'
            examples:
              Update Currency Assignments for a Channel:
                $ref: '#/components/examples/single_channel_currency_assignments_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_channel_currency_assignments_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'
    delete:
      tags:
        - Channel Currency Assignments
      summary: Delete Channel Currency Assignments
      operationId: deleteSingleChannelCurrencyAssignments
      description: 'Deletes currency assignments for a specific channel. Once done, this channel will inherit the store’s currency settings.'
      responses:
        '200':
          $ref: '#/components/responses/delete_currency_assignments_resp'
        '404':
          $ref: '#/components/responses/channel_not_found_resp'
  '/stores/{store_hash}/v3/channels/{channel_id}/listings':
    parameters:
      - name: channel_id
        description: The ID of a channel
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
    get:
      tags:
        - Channel Listings
      summary: Get Channel Listings
      operationId: listChannelListings
      description: 'Returns a list of all *Channel Listings* for a specific channel. Note that if the *Channel* is not found or there is no listing associated to the *Channel*, it will return a 200 response with empty data.'
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/product_id_in'
        - $ref: '#/components/parameters/date_created'
        - $ref: '#/components/parameters/date_created_min'
        - $ref: '#/components/parameters/date_created_max'
        - $ref: '#/components/parameters/date_modified'
        - $ref: '#/components/parameters/date_modified_min'
        - $ref: '#/components/parameters/date_modified_max'
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '400':
          $ref: '#/components/responses/invalid_channel_id_resp'
        '422':
          $ref: '#/components/responses/invalid_filters_resp'
    post:
      tags:
        - Channel Listings
      summary: Create Channel Listings
      operationId: createChannelListings
      description: Creates one or more *Channel Listings* for a specific channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMultipleListingsReq'
            examples:
              Create Single Listing:
                $ref: '#/components/examples/create_single_listing_req_example'
              Create Multiple Listings:
                $ref: '#/components/examples/create_multiple_listings_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_post_resp'
    put:
      tags:
        - Channel Listings
      summary: Update Channel Listings
      operationId: updateChannelListings
      description: |-
        Updates one or more *Channel Listings* for a specific channel.

        > #### Note
        > * Partial updates are supported. In most cases, if a field that *cannot* be updated is passed in, the API **will not** respond with an error. It returns a 200 response with the object, in which you will see the field(s) were not updated.
        > * If a new variant is provided, the API will append the variant to the list. If a variant already exists, the API will update the existing variant. Other variants that are not provided in the payload remains unchanged.
        > * If `listing_id` does not exist, the API will return a 200 response with empty data.
        > * `listing_id` is required and cannot be less than or equal to zero.
        > * `product_id` cannot be updated after a channel listing is created.
        > * `product_id` of a variant must match the `product_id` of the channel listing.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMultipleListingsReq'
            examples:
              Update Single Listing:
                $ref: '#/components/examples/update_single_listing_req_example'
              Update Multiple Listings:
                $ref: '#/components/examples/update_multiple_listings_req_example'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/single_and_multiple_listings_resp'
        '422':
          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_put_resp'
  '/stores/{store_hash}/v3/channels/{channel_id}/listings/{listing_id}':
    parameters:
      - name: channel_id
        description: The ID of a channel
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: listing_id
        description: The ID of a channel listing.
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
    get:
      tags:
        - Channel Listings
      summary: Get a Channel Listing
      operationId: getChannelListing
      description: Returns a *Channel Listing* for a specific channel.
      responses:
        '200':
          $ref: '#/components/responses/single_listing_resp'
        '404':
          $ref: '#/components/responses/listing_not_found_resp'
  '/stores/{store_hash}/v3/channels/{channel_id}/site':
    get:
      summary: Get a Channel Site
      description: |
        Alias of GET /sites?channel_id=channel_id

        Returns site data for given channel.
      operationId: get-channel-site
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      tags:
        - Channel Site
    put:
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      summary: Update a Channel Site
      operationId: put-channel-site
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_Put'
        x-examples:
          application/json:
            url: 'https://example.com/'
      tags:
        - Channel Site
      description: Updates a site for provided channel.
    parameters:
      - name: channel_id
        in: path
        required: true
        schema:
          type: string
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
    post:
      responses:
        '200':
          $ref: '#/components/responses/site_Resp'
      summary: Create a Channel Site
      operationId: postChannelSite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_Post'
        x-examples:
          application/json:
            url: 'http://kittens.mybigcommerce.com/'
            channel_id: 123
      tags:
        - Channel Site
      description: Alias of POST `/sites`. Creates a site for provided channel.
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes the Channel's site.
      tags:
        - Channel Site
      summary: Delete a Channel Site
security:
  - X-Auth-Token: []
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
servers:
  - url: 'https://api.bigcommerce.com'
    variables:
      $$.env.store_hash:
        default: store_hash
components:
  parameters:
    include:
      name: include
      description: Channels subresources that can be included in the response.
      in: query
      required: false
      schema:
        type: string
        enum:
          - currencies
    available:
      name: available
      description: 'Filter items based on whether the channel is currently available for integration. Setting this query parameter to `true` will return channels with the status of `prelaunch`, `active` , `inactive`, and `connected`. Setting this query parameter to `false` will return channels with the status of `disconnected`, `archived`, `deleted`, and `terminated`.'
      in: query
      required: false
      schema:
        type: boolean
    status_in:
      name: 'status:in'
      description: Filter items by a comma-separated list of statuses.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - prelaunch
            - active
            - inactive
            - connected
            - disconnected
            - archived
            - deleted
            - terminated
    type_in:
      name: 'type:in'
      description: Filter items by a comma-separated list of types.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - marketplace
            - marketing
            - pos
            - storefront
    platform_in:
      name: 'platform:in'
      description: 'Filter items by a comma-separated list of platforms. For a list of supported platforms, see [Platform](/api-reference/store-management/channels#platform).'
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
        example:
          - 'facebook, amazon'
    date_created:
      name: date_created
      description: 'Filter items by date_created. For example, `date_created=2019-09-04T00:00:00`, `date_created=2019-09-04`, or `date_created=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_created_min:
      name: 'date_created:min'
      description: 'Filter items by minimum date_created. For example, `date_created:min=2019-09-04T00:00:00`, `date_created:min=2019-09-04`, or `date_created:min=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_created_max:
      name: 'date_created:max'
      description: 'Filter items by maximum date_created. For example, `date_created:max=2019-09-04T00:00:00`, `date_created:max=2019-09-04`, or `date_created:max=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_modified:
      name: date_modified
      description: 'Filter items by date_modified. For example, `date_modified=2019-09-04T00:00:00`, `date_modified=2019-09-04`, or `date_modified=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_modified_min:
      name: 'date_modified:min'
      description: 'Filter items by minimum date_modified. For example, `date_modified:min=2019-09-04T00:00:00`, `date_modified:min=2019-09-04`, or `date_modified:min=1567573200`'
      in: query
      required: false
      schema:
        type: string
    date_modified_max:
      name: 'date_modified:max'
      description: 'Filter items by maximum date_modified. For example, `date_modified:max=2019-09-04T00:00:00`, `date_modified:max=2019-09-04`, or `date_modified:max=1567573200`'
      in: query
      required: false
      schema:
        type: string
    limit:
      name: limit
      description: Controls the number of items per page for paginated responses.
      in: query
      required: false
      schema:
        type: integer
    page:
      name: page
      description: Specifies the page number for a paginated response.
      in: query
      required: false
      schema:
        type: integer
    after:
      name: after
      description: Specifies the prior listing ID in a limited (paginated) list of listings.
      in: query
      required: false
      schema:
        type: integer
    product_id_in:
      name: 'product_id:in'
      description: Filter items by a comma-separated list of product IDs.
      in: query
      required: false
      schema:
        type: array
        items:
          type: integer
          format: int64
    channel_id_path_param:
      name: channel_id
      description: The ID of a channel
      in: path
      required: true
      schema:
        type: integer
        format: int64
    listing_id_path_param:
      name: listing_id
      description: The ID of a channel listing.
      in: path
      required: true
      schema:
        type: integer
        format: int64
  responses:
    multiple_channels_without_currencies_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelWithoutCurrencies'
              meta:
                $ref: '#/components/schemas/MetaWithFullPagination'
          examples:
            response:
              $ref: '#/components/examples/multiple_channels_without_currencies_resp_example'
    single_channel_without_currencies_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ChannelWithoutCurrencies'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_channel_without_currencies_resp_example'
    single_channel_with_currencies_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ChannelWithCurrencies'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_channel_with_currencies_resp_example'
    channel_active_theme_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ActiveTheme'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_active_theme_resp_example'
    multiple_channels_currency_assignments_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/multiple_channels_currency_assignments_resp_example'
    single_channel_currency_assignments_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_channel_currency_assignments_resp_example'
    delete_currency_assignments_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ChannelId'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/delete_currency_assignments_resp_example'
    single_and_multiple_listings_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Listing'
              meta:
                $ref: '#/components/schemas/MetaWithPartialPagination'
          examples:
            Single Listing:
              $ref: '#/components/examples/single_listing_resp_example'
            Multiple Listings:
              $ref: '#/components/examples/multiple_listings_resp_example'
    single_listing_resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Listing'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              $ref: '#/components/examples/single_listing_with_empty_meta_resp_example'
    site_Resp:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/site_Full'
              meta:
                $ref: '#/components/schemas/EmptyMeta'
          examples:
            response:
              value:
                data:
                  id: 1
                  url: 'https://www.my-awesome-site.com'
                  channel_id: 18735
                  created_at: '2019-08-05T18:26:21Z'
                  updated_at: '2019-08-05T18:26:21Z'
                meta: {}
    invalid_channel_id_resp:
      description: Invalid channel ID is provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Invalid Channel ID:
              $ref: '#/components/examples/error_400_resp_example'
    invalid_filter_value_resp:
      description: Invalid value is provided to the query parameter(s).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Invalid Filter Value:
              $ref: '#/components/examples/error_422_invalid_filter_value_resp_example'
    missing_or_invalid_channel_data_resp:
      description: 'The request is missing one or more required fields or invalid data is submitted. Commonly, an invalid combination of `type` and `platform` was provided.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Missing Required Field and Invalid Data:
              $ref: '#/components/examples/error_422_channel_resp_example'
            Invalid Type and Platform Combination:
              $ref: '#/components/examples/error_422_invalid_type_platform_combination_resp_example'
    channel_not_found_resp:
      description: A *Channel* with the provided ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Channel Not Found:
              $ref: '#/components/examples/error_404_resp_example'
    listing_not_found_resp:
      description: A *Channel Listing* with the provided channel ID and listing ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Listing Not Found:
              $ref: '#/components/examples/error_404_listing_not_found_resp_example'
    active_theme_not_found_resp:
      description: Active Theme of the *Channel* was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Active Theme Not Found:
              $ref: '#/components/examples/error_404_active_theme_not_found_resp_example'
    channel_entity_not_found_resp:
      description: A *Channel* with the provided ID was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Channel Not Found:
              $ref: '#/components/examples/error_404_entity_not_found_resp_example'
    duplicate_channel_resp:
      description: 'A *Channel* with the same combination of `name`, `platform`, and `type` already exists.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Duplicate Channel:
              $ref: '#/components/examples/error_409_resp_example'
    invalid_channel_update_field_resp:
      description: 'When an invalid value or invalid field is submitted, a 422 response will be sent. Note that attempt to update a deleted or terminated channel will also result in 422 response.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Update Type and Platform Error:
              $ref: '#/components/examples/error_422_prevent_update_type_and_platform_resp_example'
            Update Deleted Channel Error:
              $ref: '#/components/examples/error_422_prevent_update_deleted_channel_resp_example'
    missing_or_invalid_multiple_channels_currency_assignments_data_resp:
      description: The request is missing one or more required fields or invalid data is submitted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Missing Required Fields and Invalid Data:
              $ref: '#/components/examples/error_422_multiple_channels_currency_assignments_resp_example'
            Currency Not Yet Enabled:
              $ref: '#/components/examples/error_422_invalid_enabled_currencies_resp_example'
    missing_or_invalid_single_channel_currency_assignments_data_resp:
      description: The request is missing one or more required fields or invalid data is submitted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Missing Required Fields:
              $ref: '#/components/examples/error_422_single_channel_currency_assignments_resp_example'
            Currency Not Yet Enabled:
              $ref: '#/components/examples/error_422_invalid_enabled_currencies_resp_example'
            Invalid Channel ID:
              $ref: '#/components/examples/error_422_invalid_channel_id_resp_example'
    missing_or_invalid_multiple_listings_data_for_post_resp:
      description: The request is missing one or more required fields or invalid data is submitted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Product ID Mismatch:
              $ref: '#/components/examples/error_422_product_id_mismatch_resp_example'
            Missing Required Fields For Channel Listing:
              $ref: '#/components/examples/error_422_missing_listing_required_fields_resp_example'
            Missing Required Fields For Variants:
              $ref: '#/components/examples/error_422_missing_listing_variants_required_fields_resp_example'
            Invalid Channel ID:
              $ref: '#/components/examples/error_422_invalid_channel_id_v2_resp_example'
    missing_or_invalid_multiple_listings_data_for_put_resp:
      description: The request is missing one or more required fields or invalid data is submitted. Note that the `group_id` in the Invalid Listing ID example refers to `listing_id`. Please use `listing_id` instead of `group_id` in the request payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Product ID Mismatch:
              $ref: '#/components/examples/error_422_product_id_mismatch_resp_example'
            Missing Required Fields For Channel Listing:
              $ref: '#/components/examples/error_422_missing_listing_required_fields_resp_example'
            Missing Required Fields For Variants:
              $ref: '#/components/examples/error_422_missing_listing_variants_required_fields_resp_example'
            Invalid Channel ID:
              $ref: '#/components/examples/error_422_invalid_channel_id_v2_resp_example'
            Invalid Listing ID:
              $ref: '#/components/examples/error_422_invalid_listing_id_resp_example'
    invalid_filters_resp:
      description: 'When an invalid value or invalid query parameter is submitted, a 422 response will be sent.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Invalid Filters:
              $ref: '#/components/examples/error_422_invalid_filters_resp_example'
            Invalid Filter Value:
              $ref: '#/components/examples/error_422_invalid_filter_value_resp_example'
  examples:
    create_channel_req_example:
      value:
        name: Facebook
        platform: facebook
        type: marketplace
        status: connected
        config_meta:
          app:
            id: 123
            sections:
              - title: Overview
                query_path: overview
              - title: Settings
                query_path: settings
    update_channel_req_example:
      value:
        name: Facebook
        status: connected
        is_listable_from_ui: false
        config_meta:
          app:
            id: 123
            sections:
              - title: Overview
                query_path: overview
              - title: Settings
                query_path: settings
    multiple_channels_currency_assignments_req_example:
      value:
        - channel_id: 1
          enabled_currencies:
            - USD
          default_currency: USD
        - channel_id: 664177
          enabled_currencies:
            - USD
            - GBP
          default_currency: USD
        - channel_id: 664179
          enabled_currencies:
            - USD
            - AUD
          default_currency: USD
        - channel_id: 667159
          enabled_currencies:
            - USD
          default_currency: USD
    single_channel_currency_assignments_req_example:
      value:
        enabled_currencies:
          - USD
          - GBP
          - AUD
        default_currency: USD
    create_single_listing_req_example:
      value:
        - product_id: 80
          state: active
          name: Orbit Terrarium - Large
          description: 'The same terrarium, but not a [Sample]'
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
            - product_id: 80
              variant_id: 65
              state: active
              name: Terrarium with fish
    create_multiple_listings_req_example:
      value:
        - product_id: 80
          state: active
          name: Orbit Terrarium - Large
          description: 'The same terrarium, but not a [Sample]'
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
            - product_id: 80
              variant_id: 65
              state: active
              name: Terrarium with fish
        - product_id: 100
          state: pending
          name: Women's Bold T-Shirt
          description: 'The same t-shirt, but not a [Sample]'
          variants:
            - product_id: 100
              variant_id: 91
              state: pending
              name: Small women's bold t-shirt
            - product_id: 100
              variant_id: 92
              state: pending
              name: Medium women's bold t-shirt
    update_single_listing_req_example:
      value:
        - listing_id: 882998595
          product_id: 80
          state: active
          name: Orbit Terrarium - Large
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
    update_multiple_listings_req_example:
      value:
        - listing_id: 882789361
          product_id: 80
          state: active
          name: Orbit Terrarium - Large
          variants:
            - product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
        - listing_id: 882789362
          product_id: 100
          state: pending
          name: Women's Bold T-Shirt
          variants:
            - product_id: 100
              variant_id: 91
              state: pending
              name: Small women's bold t-shirt
    multiple_channels_without_currencies_resp_example:
      value:
        data:
          - id: 1
            icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/bigcommerce.svg'
            is_listable_from_ui: true
            is_visible: true
            date_created: '2021-05-07T14:54:51Z'
            external_id: ''
            type: storefront
            platform: bigcommerce
            is_enabled: true
            date_modified: '2021-05-07T14:54:51Z'
            name: Test Store
            status: prelaunch
          - id: 664179
            icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/amazon.svg'
            is_listable_from_ui: true
            is_visible: true
            date_created: '2021-05-10T20:32:40Z'
            external_id: ''
            type: marketplace
            platform: amazon
            is_enabled: false
            date_modified: '2021-05-13T14:25:54Z'
            name: Amazon
            status: connected
          - id: 667159
            icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/facebook.svg'
            is_listable_from_ui: false
            is_visible: true
            date_created: '2021-05-13T15:41:39Z'
            external_id: ''
            config_meta:
              app:
                id: 123
                sections:
                  - title: Overview
                    query_path: overview
                  - title: Settings
                    query_path: settings
            type: marketplace
            platform: facebook
            is_enabled: true
            date_modified: '2021-05-13T15:41:39Z'
            name: Facebook
            status: connected
        meta:
          pagination:
            per_page: 2
            total: 8
            count: 2
            links:
              previous: '?page=1&limit=2'
              current: '?page=2&limit=2'
              next: '?page=3&limit=2'
            total_pages: 4
            current_page: 2
    single_channel_without_currencies_resp_example:
      value:
        data:
          id: 667159
          icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/facebook.svg'
          is_listable_from_ui: false
          is_visible: true
          date_created: '2021-05-13T15:41:39Z'
          external_id: ''
          config_meta:
            app:
              id: 123
              sections:
                - title: Overview
                  query_path: overview
                - title: Settings
                  query_path: settings
          type: marketplace
          platform: facebook
          is_enabled: true
          date_modified: '2021-05-13T15:41:39Z'
          name: Facebook
          status: connected
        meta: {}
    single_channel_with_currencies_resp_example:
      value:
        data:
          id: 667159
          icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/facebook.svg'
          is_listable_from_ui: false
          is_visible: true
          date_created: '2021-05-13T15:41:39Z'
          external_id: ''
          config_meta:
            app:
              id: 123
              sections:
                - title: Overview
                  query_path: overview
                - title: Settings
                  query_path: settings
          type: marketplace
          platform: facebook
          is_enabled: true
          date_modified: '2021-05-13T15:41:39Z'
          name: Facebook
          status: connected
          currencies:
            channel_id: 667159
            enabled_currencies:
              - USD
            default_currency: USD
        meta: {}
    single_active_theme_resp_example:
      value:
        data:
          active_theme_uuid: e3d82ce0-9bae-0133-0de7-525400970412
          active_theme_configuration_uuid: 1c0962a0-9172-0139-70bc-2a81c0049363
          active_theme_version_uuid: b9911770-8a43-0139-f84a-7e39a3a0bc55
          saved_theme_configuration_uuid: 1c0962a0-9172-0139-70bc-2a81c0049363
        meta: {}
    multiple_channels_currency_assignments_resp_example:
      value:
        data:
          - channel_id: 1
            enabled_currencies:
              - USD
            default_currency: USD
          - channel_id: 664177
            enabled_currencies:
              - USD
              - GBP
            default_currency: USD
          - channel_id: 664179
            enabled_currencies:
              - USD
              - AUD
            default_currency: USD
          - channel_id: 667159
            enabled_currencies:
              - USD
            default_currency: USD
        meta: {}
    single_channel_currency_assignments_resp_example:
      value:
        data:
          channel_id: 1
          enabled_currencies:
            - USD
            - GBP
            - AUD
          default_currency: USD
        meta: {}
    delete_currency_assignments_resp_example:
      value:
        data: 1
        meta: {}
    single_listing_resp_example:
      value:
        data:
          - channel_id: 667159
            listing_id: 882998595
            product_id: 80
            state: active
            name: Orbit Terrarium - Large
            description: 'The same terrarium, but not a [Sample]'
            date_created: '2021-05-24T17:46:33Z'
            date_modified: '2021-05-24T17:46:33Z'
            variants:
              - channel_id: 667159
                product_id: 80
                variant_id: 64
                state: active
                name: Terrarium with dinosaur
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
              - channel_id: 667159
                product_id: 80
                variant_id: 65
                state: active
                name: Terrarium with fish
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
        meta:
          pagination:
            count: 1
            total: 1
            links:
              current: '?limit=1000'
            total_pages: 1
    multiple_listings_resp_example:
      value:
        data:
          - channel_id: 664177
            listing_id: 882789361
            product_id: 80
            state: active
            name: Orbit Terrarium - Large
            description: 'The same terrarium, but not a [Sample]'
            date_created: '2021-05-24T17:46:33Z'
            date_modified: '2021-05-24T17:46:33Z'
            variants:
              - channel_id: 664177
                product_id: 80
                variant_id: 64
                state: active
                name: Terrarium with dinosaur
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
              - channel_id: 664177
                product_id: 80
                variant_id: 65
                state: active
                name: Terrarium with fish
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
          - channel_id: 664177
            listing_id: 882789362
            product_id: 100
            state: pending
            name: Women's Bold T-Shirt
            description: 'The same t-shirt, but not a [Sample]'
            date_created: '2021-05-24T17:46:33Z'
            date_modified: '2021-05-24T17:46:33Z'
            variants:
              - channel_id: 664177
                product_id: 100
                variant_id: 91
                state: pending
                name: Small women's bold t-shirt
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
              - channel_id: 664177
                product_id: 100
                variant_id: 92
                state: pending
                name: Medium women's bold t-shirt
                date_created: '2021-05-24T17:46:33Z'
                date_modified: '2021-05-24T17:46:33Z'
        meta:
          pagination:
            count: 2
            total: 2
            links:
              current: '?limit=1000'
            total_pages: 1
    single_listing_with_empty_meta_resp_example:
      value:
        data:
          channel_id: 667159
          listing_id: 882998595
          product_id: 80
          state: active
          name: Orbit Terrarium - Large
          description: 'The same terrarium, but not a [Sample]'
          date_created: '2021-05-24T17:46:33Z'
          date_modified: '2021-05-24T17:46:33Z'
          variants:
            - channel_id: 667159
              product_id: 80
              variant_id: 64
              state: active
              name: Terrarium with dinosaur
              date_created: '2021-05-24T17:46:33Z'
              date_modified: '2021-05-24T17:46:33Z'
            - channel_id: 667159
              product_id: 80
              variant_id: 65
              state: active
              name: Terrarium with fish
              date_created: '2021-05-24T17:46:33Z'
              date_modified: '2021-05-24T17:46:33Z'
        meta: {}
    error_400_resp_example:
      value:
        status: 400
        title: Input is invalid
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_resp_example:
      value:
        status: 404
        title: Not found
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_entity_not_found_resp_example:
      value:
        status: 404
        title: The requested entity was not found.
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_active_theme_not_found_resp_example:
      value:
        status: 404
        title: 'No active theme found with channel_id: 123456789'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_404_listing_not_found_resp_example:
      value:
        status: 404
        title: 'Listing [123456789] not found'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_409_resp_example:
      value:
        status: 409
        title: 'Channel already exists with name: "Facebook", platform: "facebook", and type: "marketplace"'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_invalid_filter_value_resp_example:
      value:
        status: 422
        title: 'Query parameter "limit" value must be integer. For input string: "a".'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_channel_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          platform: error.path.missing
          name: error.expected.jsstring
    error_422_invalid_type_platform_combination_resp_example:
      value:
        status: 422
        title: 'Input channel type [marketplace] with platform [bigcommerce] is not supported'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_prevent_update_type_and_platform_resp_example:
      value:
        status: 422
        title: 'The following fields are invalid: type, platform'
        type: /api-docs/getting-started/api-status-codes
        errors:
          type: The field 'type' can not be updated after channel is created.
          platform: The field 'platform' can not be updated after channel is created.
    error_422_prevent_update_deleted_channel_resp_example:
      value:
        status: 422
        title: A deleted channel cannot be updated. Channel can be restored within 90 days after deleting by contacting BigCommerce support team
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_multiple_channels_currency_assignments_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          0.channel_id: error.expected.jsnumber
          0.enabled_currencies: error.path.missing
          0.default_currency: error.path.missing
    error_422_single_channel_currency_assignments_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          enabled_currencies: error.path.missing
          default_currency: error.path.missing
    error_422_invalid_enabled_currencies_resp_example:
      value:
        status: 422
        title: 'The following fields are invalid: `enabled_currencies`'
        type: /api-docs/getting-started/api-status-codes
        errors:
          enabled_currencies: 'The field `enabled_currencies` contains the following currencies that have not been enabled [AWG]'
    error_422_invalid_channel_id_resp_example:
      value:
        status: 422
        title: 'The following `channel_id`s [123456789] are not valid for store 1000000000.'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_invalid_filters_resp_example:
      value:
        status: 422
        title: 'The filter(s): a, b are not valid filter parameter(s).'
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_product_id_mismatch_resp_example:
      value:
        status: 422
        title: '0/0 product listing group(s) and 0/0 product listing(s) upserted. Invalid fields: '
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_missing_listing_required_fields_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          0.state: error.path.missing
          0.variants: error.path.missing
          0.product_id: error.path.missing
    error_422_missing_listing_variants_required_fields_resp_example:
      value:
        status: 422
        title: JSON data is missing or invalid
        type: /api-docs/getting-started/api-status-codes
        errors:
          0.variants.0.state: error.path.missing
          0.variants.0.product_id: error.path.missing
          0.variants.0.variant_id: error.path.missing
    error_422_invalid_channel_id_v2_resp_example:
      value:
        status: 422
        title: Channel id (1000000) is not valid for store (1001808665)!
        type: /api-docs/getting-started/api-status-codes
        errors: {}
    error_422_invalid_listing_id_resp_example:
      value:
        status: 422
        title: '0/0 product listing group(s) and 0/0 product listing(s) upserted. Invalid fields: group_id,'
        type: /api-docs/getting-started/api-status-codes
        errors:
          group_id: Group id (0) for store (1001808665) cannot be less than or equal to zero!
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  Channel Listings | modify | `store_channel_listings` |
        |  Channel Listings | read-only | `store_channel_listings_read_only` |
        |  Channel Settings | modify | `store_channel_settings` |
        |  Channel Settings | read-only | `store_channel_settings_read_only` |
        |  Sites & Routes | modify | `store_sites` |
        |  Sites & Routes | read-only | `store_sites_read_only` |

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```


        * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  schemas:
    ChannelId:
      type: integer
      format: int64
      description: The ID of the channel.
      x-internal: true
    ChannelIdForListing:
      type: integer
      format: int64
      description: The ID of the channel associated with this channel listing.
      x-internal: true
    ListingId:
      type: integer
      format: int64
      minimum: 1
      description: 'The ID of the channel listing that has been created, returned, or updated.'
      x-internal: true
    ProductId:
      type: integer
      format: int64
      description: The ID of the product associated with this channel listing.
      x-internal: true
    VariantId:
      type: integer
      format: int64
      description: The ID of the product variant associated with this channel listing.
      x-internal: true
    ExternalId:
      type: string
      description: Associated ID within a system / platform outside of BC.
      x-internal: true
    IsListableFromUI:
      type: boolean
      description: Indicates if a channel can create listings from the BigCommerce UI. Default value for this field is based on the channel type and platform combination if not specified on create.
      x-internal: true
    IsVisible:
      type: boolean
      description: 'Indicates if a channel is visible within the BigCommerce merchant admin UI (control panel). If `false`, the channel will not show in Channel Manager nor in any channels dropdown throughout the UI. Default value for this field is `true` if not specified on create.'
      x-internal: true
    IsEnabled:
      deprecated: true
      type: boolean
      description: 'This field was originally used to turn on/off a channel but is deprecated. `status` should be used in place of `is_enabled`. Channel with `status` of `prelaunch`, `active`, or `connected` will have `is_enabled` set to `true`. Channel with `status` of `inactive`, `disconnected`, `archived`, `deleted`, or `terminated` will have `is_enabled` set to `false`.'
      x-internal: true
    ChannelStatus:
      type: string
      description: 'The status of the channel; channel `type`, `platform`, and `status` must be a [valid combination](/api-reference/store-management/channels#status). `terminated` is not valid for `PUT` or `POST` requests. `deleted` is not valid for `POST` requests.'
      enum:
        - active
        - prelaunch
        - inactive
        - connected
        - disconnected
        - archived
        - deleted
        - terminated
      title: ''
      x-internal: true
    ChannelName:
      type: string
      description: Name of the channel as it will appear to merchants in the control panel.
      x-internal: true
    ChannelType:
      type: string
      description: 'The type of channel; channel `platform` and `type` must be a [valid combination](/api-reference/store-management/channels#platform).'
      enum:
        - pos
        - marketplace
        - storefront
        - marketing
      x-internal: true
    ChannelPlatform:
      type: string
      description: 'The name of the platform for the channel; channel `platform` and `type` must be a [valid combination](/api-reference/store-management/channels#platform).'
      x-internal: true
    ChannelDateCreated:
      type: string
      format: date-time
      description: Date on which the channel was first created.
      x-internal: true
    ChannelDateModified:
      type: string
      format: date-time
      description: Date on which the channel was most recently changed.
      x-internal: true
    IconUrl:
      type: string
      format: url
      description: Link to the platform icon.
      x-internal: true
    EnabledCurrencies:
      type: array
      description: 'Currencies that are enabled for the given channel in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) three character alphabetic format.'
      items:
        type: string
      x-internal: true
    DefaultCurrency:
      type: string
      description: 'Default currency for the channel in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) three character alphabetic format. Will be used on storefront when other currencies cannot.'
      x-internal: true
    ChannelProductName:
      type: string
      description: Name of the product for this channel listing specifically. This is an optional field that can be used to override the product name in the catalog.
      x-internal: true
    ChannelProductVariantName:
      type: string
      description: Name of the product variant for this channel listing specifically. This is an optional field that can be used to override the name of the product variant in the catalog.
      x-internal: true
    ChannelProductDescription:
      type: string
      description: Description of the product for this channel listing specifically. This is an optional field that can be used to override the product description in the catalog.
      x-internal: true
    ChannelProductVariantDescription:
      type: string
      description: Description of the product variant for this channel listing specifically. This is an optional field that can be used to override the description of the product variant in the catalog.
      x-internal: true
    ChannelListingDateCreated:
      type: string
      format: date-time
      description: Date on which the channel listing was first created.
      x-internal: true
    ChannelListingVariantDateCreated:
      type: string
      format: date-time
      description: Date on which the channel listing variant was first created.
      x-internal: true
    ChannelListingDateModified:
      type: string
      format: date-time
      description: Date on which the channel listing was most recently changed.
      x-internal: true
    ChannelListingVariantDateModified:
      type: string
      format: date-time
      description: Date on which the channel listing variant was most recently changed.
      x-internal: true
    ListingState:
      type: string
      description: The state of the product assignment or channel listing.
      enum:
        - active
        - disabled
        - error
        - pending
        - pending_disable
        - pending_delete
        - partially_rejected
        - queued
        - rejected
        - submitted
        - deleted
      x-internal: true
    VariantState:
      type: string
      description: The state of the channel listing variant.
      enum:
        - active
        - disabled
        - error
        - pending
        - pending_disable
        - pending_delete
        - queued
        - rejected
        - submitted
        - deleted
      x-internal: true
    ChannelConfigMeta:
      type: object
      description: Optional channel configuration object.
      properties:
        app:
          type: object
          description: 'A [channel app](/api-docs/channels/overview#channel-apps) config object for optionally configuring the channel''s user interface in the control panel.'
          properties:
            id:
              type: integer
              description: 'The unique `id` given to an app registered in [DevTools](https://devtools.bigcommerce.com/); used to create links to the app in channel manager. `app.id` is optional; however, if you''re building an app that creates or manages a channel, we recommend including it to ensure the user interface in the control panel works properly. Select partners who are promoted in the Channel Manager must build an app, and include the app ID in the create channel request. [Learn how to find an App''s ID](/api-docs/apps/tutorials/id).'
            sections:
              type: array
              description: 'If set, when the app is loaded within the control panel, the navigation `sections` will be directly embedded in the control panel navigation.'
              items:
                type: object
                properties:
                  title:
                    type: string
                    description: The title of the navigation section.
                    example: '"Settings"'
                  query_path:
                    type: string
                    description: The value that will be passed to the app's iFrame in the URL and will allow the app to display the appropriate section within the app iFrame in the control panel.
      x-internal: true
    CurrencyNotRequiredWithChannelId:
      type: object
      description: Details about currency assignments for a specific channel.
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelId'
        enabled_currencies:
          $ref: '#/components/schemas/EnabledCurrencies'
        default_currency:
          $ref: '#/components/schemas/DefaultCurrency'
      x-internal: true
    CurrencyRequiredWithChannelId:
      type: object
      description: Details about currency assignments for a specific channel.
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelId'
        enabled_currencies:
          $ref: '#/components/schemas/EnabledCurrencies'
        default_currency:
          $ref: '#/components/schemas/DefaultCurrency'
      required:
        - channel_id
        - enabled_currencies
        - default_currency
      x-internal: true
    CurrencyRequiredWithoutChannelId:
      type: object
      description: Details about currency assignments for a specific channel.
      properties:
        enabled_currencies:
          $ref: '#/components/schemas/EnabledCurrencies'
        default_currency:
          $ref: '#/components/schemas/DefaultCurrency'
      required:
        - enabled_currencies
        - default_currency
      x-internal: true
    CreateChannelReq:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        is_enabled:
          $ref: '#/components/schemas/IsEnabled'
        status:
          $ref: '#/components/schemas/ChannelStatus'
        name:
          $ref: '#/components/schemas/ChannelName'
        type:
          $ref: '#/components/schemas/ChannelType'
        platform:
          $ref: '#/components/schemas/ChannelPlatform'
      required:
        - name
        - type
        - platform
      x-internal: true
    UpdateChannelReq:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        is_enabled:
          $ref: '#/components/schemas/IsEnabled'
        name:
          $ref: '#/components/schemas/ChannelName'
        status:
          $ref: '#/components/schemas/ChannelStatus'
      x-internal: true
    UpsertMultipleChannelsCurrencyAssignmentsReq:
      type: array
      items:
        $ref: '#/components/schemas/CurrencyRequiredWithChannelId'
      x-internal: true
    CreateMultipleListingsReq:
      type: array
      items:
        $ref: '#/components/schemas/UpsertListingWithoutListingIdReq'
      x-internal: true
    UpdateMultipleListingsReq:
      type: array
      items:
        $ref: '#/components/schemas/UpsertListingWithListingIdReq'
      x-internal: true
    UpsertListingWithoutListingIdReq:
      type: object
      description: Details about assigning a product to a specific channel.
      properties:
        product_id:
          $ref: '#/components/schemas/ProductId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/ListingState'
        name:
          $ref: '#/components/schemas/ChannelProductName'
        description:
          $ref: '#/components/schemas/ChannelProductDescription'
        variants:
          $ref: '#/components/schemas/ChannelProductMultipleVariants'
      required:
        - product_id
        - state
        - variants
      x-internal: true
    UpsertListingWithListingIdReq:
      type: object
      description: Details about assigning a product to a specific channel.
      properties:
        listing_id:
          $ref: '#/components/schemas/ListingId'
        product_id:
          $ref: '#/components/schemas/ProductId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/ListingState'
        name:
          $ref: '#/components/schemas/ChannelProductName'
        description:
          $ref: '#/components/schemas/ChannelProductDescription'
        variants:
          $ref: '#/components/schemas/ChannelProductMultipleVariants'
      required:
        - listing_id
        - product_id
        - state
        - variants
      x-internal: true
    ChannelProductMultipleVariants:
      type: array
      items:
        $ref: '#/components/schemas/ChannelProductVariantPartial'
      x-internal: true
    ChannelProductVariantPartial:
      type: object
      description: Details about a variant of the product for this channel listing.
      properties:
        product_id:
          $ref: '#/components/schemas/ProductId'
        variant_id:
          $ref: '#/components/schemas/VariantId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/VariantState'
        name:
          $ref: '#/components/schemas/ChannelProductVariantName'
        description:
          $ref: '#/components/schemas/ChannelProductVariantDescription'
      required:
        - product_id
        - variant_id
        - state
      x-internal: true
    ChannelProductVariantFull:
      type: object
      description: Details about a variant of the product for this channel listing.
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelIdForListing'
        product_id:
          $ref: '#/components/schemas/ProductId'
        variant_id:
          $ref: '#/components/schemas/VariantId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        state:
          $ref: '#/components/schemas/VariantState'
        name:
          $ref: '#/components/schemas/ChannelProductVariantName'
        description:
          $ref: '#/components/schemas/ChannelProductVariantDescription'
        date_created:
          $ref: '#/components/schemas/ChannelListingVariantDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelListingVariantDateModified'
      x-internal: true
    ChannelWithoutCurrencies:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        id:
          $ref: '#/components/schemas/ChannelId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        is_enabled:
          $ref: '#/components/schemas/IsEnabled'
        status:
          $ref: '#/components/schemas/ChannelStatus'
        name:
          $ref: '#/components/schemas/ChannelName'
        type:
          $ref: '#/components/schemas/ChannelType'
        platform:
          $ref: '#/components/schemas/ChannelPlatform'
        date_created:
          $ref: '#/components/schemas/ChannelDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelDateModified'
        icon_url:
          $ref: '#/components/schemas/IconUrl'
      x-internal: true
    ChannelWithCurrencies:
      type: object
      properties:
        config_meta:
          $ref: '#/components/schemas/ChannelConfigMeta'
        id:
          $ref: '#/components/schemas/ChannelId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        is_listable_from_ui:
          $ref: '#/components/schemas/IsListableFromUI'
        is_visible:
          $ref: '#/components/schemas/IsVisible'
        is_enabled:
          $ref: '#/components/schemas/IsEnabled'
        status:
          $ref: '#/components/schemas/ChannelStatus'
        name:
          $ref: '#/components/schemas/ChannelName'
        type:
          $ref: '#/components/schemas/ChannelType'
        platform:
          $ref: '#/components/schemas/ChannelPlatform'
        date_created:
          $ref: '#/components/schemas/ChannelDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelDateModified'
        icon_url:
          $ref: '#/components/schemas/IconUrl'
        currencies:
          $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'
      x-internal: true
    ActiveTheme:
      type: object
      description: Details about the Channel's relationship to Themes.
      properties:
        active_theme_uuid:
          type: string
          description: The UUID of the currently active Theme on the Channel.
        active_theme_configuration_uuid:
          type: string
          description: The UUID of the currently active Theme Configuration on the Channel.
        active_theme_version_uuid:
          type: string
          description: The UUID of the currently active Theme Version on the Channel. Needed to look up the available Custom Templates for the Theme.
        saved_theme_configuration_uuid:
          type: string
          description: 'The UUID of the most recently saved Theme Configuration. If this is different from the active Theme Configuration UUID, this indicates that some changes have been saved in the control panel Theme Editor that have not yet been published.'
      x-internal: true
    Listing:
      type: object
      properties:
        channel_id:
          $ref: '#/components/schemas/ChannelIdForListing'
        listing_id:
          $ref: '#/components/schemas/ListingId'
        external_id:
          $ref: '#/components/schemas/ExternalId'
        product_id:
          $ref: '#/components/schemas/ProductId'
        state:
          $ref: '#/components/schemas/ListingState'
        name:
          $ref: '#/components/schemas/ChannelProductName'
        description:
          $ref: '#/components/schemas/ChannelProductDescription'
        date_created:
          $ref: '#/components/schemas/ChannelListingDateCreated'
        date_modified:
          $ref: '#/components/schemas/ChannelListingDateModified'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ChannelProductVariantFull'
      x-internal: true
    Error:
      type: object
      properties:
        status:
          type: integer
          format: int32
          description: The HTTP status code.
        title:
          type: string
          description: The error title describing the particular error.
        type:
          type: string
          description: Link to a list of BigCommerce API status codes.
        errors:
          type: object
          description: Provides more details to errors.
      x-internal: true
    MetaWithFullPagination:
      type: object
      description: 'Data about the response, including pagination.'
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Full'
      x-internal: true
    MetaWithPartialPagination:
      type: object
      description: 'Data about the response, including pagination.'
      properties:
        pagination:
          $ref: '#/components/schemas/pagination_Partial'
      x-internal: true
    EmptyMeta:
      type: object
      description: Empty meta object; may be used later.
      x-internal: true
    pagination_Full:
      type: object
      description: |
        Data about the pagination.
      properties:
        per_page:
          type: integer
          description: |
            The maximum number of items per page.
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        current_page:
          type: integer
          description: The current page number.
        links:
          type: object
          description: |
            Pagination links for the previous, current, or next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
      x-internal: true
    pagination_Partial:
      type: object
      description: |
        Data about the pagination.
      properties:
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        total:
          type: integer
          description: |
            Total number of items in the result set.
        links:
          type: object
          description: |
            Pagination links for the previous, current, or next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
      x-internal: true
    site_Put:
      type: object
      properties:
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
      title: site_Put
      x-internal: true
    site_Post:
      type: object
      properties:
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
      title: site_Post
      x-internal: true
    site_Full:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.
          example: 'http://kittens.mybigcommerce.com/'
        channel_id:
          type: integer
          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'
        created_at:
          type: string
          description: When was this site created? RFC 3339
          example: '2018-01-04T04:15:50.000Z'
        updated_at:
          type: string
          description: When was this site defintion last updated? RFC 3339
          example: '2018-01-04T04:15:50.000Z'
        routes:
          type: array
          description: (optional - if included) collection of routes defined for this site. Limited to 200 routes side loaded (query routes direction via `/routes` for bulk)
          items:
            type: object
            properties:
              id:
                type: integer
                description: Unique ID for this route. Required when updating an existing route
              type:
                type: string
                description: What type of resource are we routing to?
                enum:
                  - product
                  - brand
                  - category
                  - page
                  - blog
                  - home
                  - cart
                  - checkout
                  - search
                  - account
                  - login
                  - returns
                  - static
              matching:
                type: string
                description: |-
                  (entity_id?) For a given type, which resources should match this route? e.g For a route with the type: "product" and matching: "5" this route would be used for the product with the ID of 5.

                  Depending on the type of resource, this may be an ID (matching a specific item), or a "*" wildcard matching all items of that type.
                example: '5'
              route:
                type: string
                description: |-
                  The route template that will be used to generate the URL for the requested resource.

                  Supports several tokens:

                  - {id} The ID of the requested item
                  - {slug} The slug for the requested item (if available). Note: the `slug` value may contain `/` slash
                  - {language} The language string that the client is using
                example: /my-amazing-product
      title: site_Full
      x-internal: true
